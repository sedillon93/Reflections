What happens when you initialize a repository? Why do you need to do it?

    When you initialize the repository an empty git file is created within the folder
    you selected. You need to do this because you will then be able to use git for
    version control. Unless you tell the computer to make a git file, it will not
    make the file and you will be unable to use git.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    The staging area is where the files are while you are editing them before you
    submit a commit. The repository holds the past and present versions of the files
    so it keeps a record of the commits made. The working directory is what holds the
    files that you will be working on but only one version. The staging area is beneficial
    because it allows you to pull out the files you want to change, make edits, and
    then submit the commits instead of having to submit the files to the repository
    one at a time.

How can you use the staging area to make sure you have one commit per logical
change?

    After you add the changed file to the staging area you can use the command
    git diff to compare the file in the staging area to the file in the working
    directory. You could then see if there are many differences and you have made
    lots of changes between commits.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
